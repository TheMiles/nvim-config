set nocompatible            " disable compatibility to old-time vi
set showmatch               " show matching 
set ignorecase              " case insensitive 
set mouse=v                 " middle-click paste with 
set hlsearch                " highlight search 
set incsearch               " incremental search
set tabstop=4               " number of columns occupied by a tab 
set softtabstop=4           " see multiple spaces as tabstops so <BS> does the right thing
set expandtab               " converts tabs to white space
set shiftwidth=4            " width for autoindents
set autoindent              " indent a new line the same amount as the line just typed
set number                  " add line numbers
set relativenumber          " line numbers show relative distance to current line
set wildmode=longest,list   " get bash-like tab completions
"set cc=80                   " set an 80 column border for good coding style
filetype plugin indent on   "allow auto-indenting depending on file type
syntax on                   " syntax highlighting
set mouse=a                 " enable mouse click
set clipboard=unnamedplus   " using system clipboard
filetype plugin on
set cursorline              " highlight current cursorline
set ttyfast                 " Speed up scrolling in Vim
" set spell                 " enable spell check (may need to download language package)
" set noswapfile            " disable creating swap file
" set backupdir=~/.cache/vim " Directory to store backup files.

# For compatibilit reasons /bin is linked to /usr/bin
# when checking for python executables it shows up twice
# so lets tell neovim which one is the right one
let g:python3_host_prog = '/usr/bin/python3'

# disable looking for the perl provider
# thus no warning in :checkhealth
let g:loaded_perl_provider = 0

call plug#begin()

Plug 'preservim/nerdtree'                            " File system explorer sidebar
Plug 'Xuyuanp/nerdtree-git-plugin'                   " Show git status icons in NerdTree
Plug 'ryanoasis/vim-devicons'                        " Using NerdFont compatible icons, used in NerdTree

Plug 'tpope/vim-commentary'                          " Easy commenting out lines
Plug 'preservim/tagbar'                              " Browse universal-ctags files

Plug 'vim-airline/vim-airline'                       " Some statusline
Plug 'rafi/awesome-vim-colorschemes'                 " Color scheme selector
Plug 'xiyaowong/nvim-cursorword'                     " Highlighting occurences of word under cursor

Plug 'akinsho/toggleterm.nvim', {'tag' : '*'}        " making interaction with terminal easier

Plug 'neoclide/coc.nvim', {'branch': 'release'}      " load extensions like VS Code and language servers

call plug#end()

" unset Continue with comment leader in next line
" found on https://superuser.com/questions/271023/can-i-disable-continuation-of-comments-to-the-next-line-in-vim
autocmd BufNewFile,BufRead * setlocal formatoptions-=cro

set encoding=UTF-8

nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-b> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>


" Start NERDTree. If a file is specified, move the cursor to its window.
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * NERDTree | if argc() > 0 || exists("s:std_in") | wincmd p | endif


" Close the tab if NERDTree is the only window remaining in it.
autocmd BufEnter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif


colorscheme sonokai

" air-line
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''


